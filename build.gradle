/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
// Apply the plugin to be runnable
apply plugin: 'application'
// Apply the eclipse plugin to import project on other machines
apply plugin: 'eclipse'
// Apply the IDEA plugin to import project on other machines
apply plugin: 'idea'
// JUnit 5
apply plugin: 'org.junit.platform.gradle.plugin'
// In order to bundle dependencies
apply plugin: 'com.github.johnrengelman.shadow'

// Define the entry point
mainClassName = 'meshIneBits.MeshIneBitsMain'
applicationName = 'MeshIneBits'
def actualVersion = '0.4.2'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    // mavenCentral()
}

sourceCompatibility = 1.8

// In this section you declare the dependencies for your production and test code
dependencies {
    implementation 'org.jetbrains:annotations:19.0.0'

    //implementation "org.nd4j:nd4j-cuda-10.2-platform:1.0.0-beta6"
    implementation "org.nd4j:nd4j-native-platform:1.0.0-beta6"
    implementation "org.deeplearning4j:deeplearning4j-core:1.0.0-beta6"
    implementation "ch.qos.logback:logback-classic:1.0.11"
    implementation "org.deeplearning4j:deeplearning4j-ui:1.0.0-beta6"
    compile "org.datavec:datavec-local:1.0.0-beta6"

    compile "org.choco-solver:choco-solver:4.10.8"

    implementation 'org.jetbrains:annotations:19.0.0'
    compile 'org.processing:core:3.3.5'
    compile 'org.jogamp.jogl:jogl-all:2.3.2'
    compile 'org.jogamp.gluegen:gluegen-rt:2.3.2'
    testCompile 'org.json:json:20180130'
    compile group: 'org.knowm.xchart', name: 'xchart', version: '3.6.5'
    compile files('libs/proscene.jar', 'libs/controlP5.jar', 'libs/xchart-3.6.5.jar', 'libs/commons-math3-3.3.jar')

    runtime "org.jogamp.gluegen:gluegen-rt:2.3.2:natives-linux-amd64"
    runtime "org.jogamp.gluegen:gluegen-rt:2.3.2:natives-linux-armv6"
    runtime "org.jogamp.gluegen:gluegen-rt:2.3.2:natives-linux-armv6hf"
    runtime "org.jogamp.gluegen:gluegen-rt:2.3.2:natives-linux-i586"
    runtime "org.jogamp.gluegen:gluegen-rt:2.3.2:natives-macosx-universal"
    runtime "org.jogamp.gluegen:gluegen-rt:2.3.2:natives-windows-amd64"
    runtime "org.jogamp.gluegen:gluegen-rt:2.3.2:natives-windows-i586"

    runtime "org.jogamp.jogl:jogl-all:2.3.2:natives-linux-amd64"
    runtime "org.jogamp.jogl:jogl-all:2.3.2:natives-linux-armv6"
    runtime "org.jogamp.jogl:jogl-all:2.3.2:natives-linux-armv6hf"
    runtime "org.jogamp.jogl:jogl-all:2.3.2:natives-linux-i586"
    runtime "org.jogamp.jogl:jogl-all:2.3.2:natives-macosx-universal"
    runtime "org.jogamp.jogl:jogl-all:2.3.2:natives-solaris-i586"
    runtime "org.jogamp.jogl:jogl-all:2.3.2:natives-windows-amd64"
    runtime "org.jogamp.jogl:jogl-all:2.3.2:natives-windows-i586"

    testCompile('org.junit.jupiter:junit-jupiter-api:5.1.0',
            'org.junit.jupiter:junit-jupiter-params:5.1.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.1.0',
            'org.junit.platform:junit-platform-launcher:1.1.0')
}

eclipse {
    project.natures 'org.eclipse.buildship.core.gradleprojectnature'
    classpath {
        file {
            defaultOutputDir = file("bin/main")
            whenMerged {
                //change output folder for tests
                def testSource = entries.find { it.path == 'src/test/java' }
                testSource.output = "bin/test"

                // Remove local ref for libs
                // entries.removeAll { it.kind == "lib" }
            }
            containers 'org.eclipse.jdt.junit.JUNIT_CONTAINER/5', 'org.eclipse.buildship.core.gradleclasspathcontainer'
        }
    }
}

tasks.idea.dependsOn(cleanIdea)

idea {
    module {
        [".gradle", ".idea", "data", "doc", "out"].each {
            excludeDirs += file(it)
        }
        iml {
            beforeMerged { module ->
                module.excludeFolders.clear()
            }
        }
    }
}

buildscript {
    repositories {
        repositories {
            maven {
                url "https://plugins.gradle.org/m2/"
            }
        }
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.1'
    }
}

jar {
    baseName = applicationName
    version = actualVersion
    manifest { attributes 'Main-Class': mainClassName }
}

shadowJar {
    baseName = applicationName
    classifier = null
    appendix = null
    version = actualVersion
}